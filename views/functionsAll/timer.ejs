
<div class="timer">
  <div 
  class="button-group 
  mode-buttons" 
  id="buttonsModes">
    <button
      data-mode="pomodoro"
      class="button active mode-button"
      id="js-pomodoro"
    >
      Pomodoro
    </button>
    <button
      data-mode="shortBreak"
      class="button mode-button"
      id="js-short-break"
    >
      Kort paus
    </button>
    <button
      data-mode="longBreak"
      class="button mode-button"
      id="longBreakButt"
    >
      Lång paus
    </button>
  </div>
  <div class="clock" id="js-clock">
    <span id="js-minutes">25</span>
    <span class="separator">:</span>
    <span id="js-seconds">00</span>
  </div>
  <button class="main-button " 
  data-action="start" 
  id="timerButt">
    Start
  </button>
</div>

</div>
<div class="hidden">
  <audio src="sound/backtowork.mp3" data-sound="pomodoro"></audio>
  <audio src="sound/Radiation Meter.mp3" data-sound="shortBreak"></audio>
  <audio src="sound/Radiation Meter.mp3" data-sound="longBreak"></audio>
</div>

<script>
const timer = {
  pomodoro: 25,
  shortBreak: 5,
  longBreak: 15,
  longBreakInterval: 4,
  sessions: 0,
};

const buttSound = new Audio('sound/button-sound.mp3');
const mainButt = document.getElementById("timerButt");
const modeButtons = document.querySelector("#buttonsModes");


let interval;


const switchMode = (mode) => {
  timer.mode = mode;
  timer.remainingTime = {
    total: timer[mode] * 60,
    minutes: timer[mode],
    seconds: 0,
  };

  document
    .querySelectorAll('button[data-mode]')
    .forEach(e => e.classList.remove('active'));
  document.querySelector(`[data-mode="${mode}"]`).classList.add('active');
  
  updateClock();
}

const handleMode = (event) => {
  const { mode } = event.target.dataset;
  if (!mode) return;
  switchMode(mode);
  stopTimer();
}

modeButtons.addEventListener('click', handleMode);

mainButt.addEventListener('click', () => {
  buttSound.play();
  const { action } = mainButt.dataset;
  if (action === 'start') {
    startTimer();
  } else {
    stopTimer();
  }
});


function getRemainingTime(endTime) {
  const currentTime = Date.parse(new Date());
  const difference = endTime - currentTime;

  const total = Number.parseInt(difference / 1000, 10);
  const minutes = Number.parseInt((total / 60) % 60, 10);
  const seconds = Number.parseInt(total % 60, 10);

  return {
    total,
    minutes,
    seconds,
  };
}

function startTimer() {
  let { total } = timer.remainingTime;
  const endTime = Date.parse(new Date()) + total * 1000;

  if (timer.mode === 'pomodoro') timer.sessions++;

  mainButt.dataset.action = 'stop';
  mainButt.textContent = 'stopp';
  mainButt.classList.add('active');


  interval = setInterval(function() {
    timer.remainingTime = getRemainingTime(endTime);
    updateClock();

    total = timer.remainingTime.total;
    if (total <= 0) {
      clearInterval(interval);

      switch (timer.mode) {
        case 'pomodoro':
          if (timer.sessions % timer.longBreakInterval === 0) {
            switchMode('longBreak');
          } else {
            switchMode('shortBreak');
          }
          break;
        default:
          switchMode('pomodoro');
      }

      document.querySelector(`[data-sound="${timer.mode}"]`).play();

      startTimer();
    }
  }, 1000);
}

function stopTimer() {
  clearInterval(interval);

  mainButt.dataset.action = 'start';
  mainButt.textContent = 'start';
  mainButt.classList.remove('active');
}

function updateClock() {
  const { remainingTime } = timer;
  const minutes = `${remainingTime.minutes}`.padStart(2, '0');
  const seconds = `${remainingTime.seconds}`.padStart(2, '0');

  const min = document.getElementById('js-minutes');
  const sec = document.getElementById('js-seconds');
  min.textContent = minutes;
  sec.textContent = seconds;

  const text =
    timer.mode === 'pomodoro' ? 'Tillbaka till arbetet' : 'Ta en paus!';
  document.title = `${minutes}:${seconds} — ${text}`;

  

}
//*-----default
document.addEventListener('DOMContentLoaded', () => {
  switchMode('pomodoro');
});
</script>
