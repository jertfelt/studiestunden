//?-------HOMEPAGE(EXPRESS SESSION)
app.get('/', (req, res) => {
  session=req.session;
  if(session.userid){
    res.send("Logga in!")
  }else{
    res.render('index', { title: 'Studiestunden'});
  } 
});


const sessions = require("express-session");

EXPRESS SESSION :
//**--------Express session */
app.use(sessions({
  secret: SECRET,
  saveUninitialized: true,
  cookie: { 
    maxAge: 1000 * 60 * 60 * 24,
    secure: true},
  resave: false
}))

//username and password
const myusername = 'user1'
const mypassword = 'mypassword'

// a variable to save a session
let session;

//! Earlier code from trying to use express session, do not use:
// const showLoggedInMenu = async () => {
//   if(sessionStorage.getItem('status') != null){
//     showUserMenu();
//   }
//   else {
//     showDefaultMenu();
//   }
// }

// showLoggedInMenu();



// //?login form
// app.post("/user", (req, res) => {
//   if(req.body.username == myusername && req.body.password == mypassword){
//     session = req.session;
//     session.userid=req.body.username;
//     console.log(req.session);
//     res.send("Hej och välkommen")
//   }
//   else {
//     res.send("Fel lösenord eller användarnamn, var vänlig försök igen")
//   }
// })



//!testing
// app.post("/users", (req, res) => {
//   if(req.body.usernameLogin == myusername){
//     session = req.session;
//     session.userid=req.body.usernameLogin;
//         console.log(req.session)
//   }
// })



  // User.find().then(result =>{
  //   console.log("THIS IS ALL THE RESULTS:" + result)
  //   res.render("../views/partials/test"), {user: result, title: "Alla medlemmar"}
  // })
  // .catch(err => 
  //   console.log(err)
  // )




  //function that creates roles: (server.js in mongoose connection function)
  // const initial = () => {
  //   Role.estimatedDocumentCount((err, count) => {
  //     if (!err && count === 0){
  //       new Role({
  //         name: "user"
  //       }).save(err => {
  //         if (err){
  //           console.log("ERROR", err);
  //         }
  //         console.log("Added 'user' to roles")
  //       })
  //       new Role({
  //         name: "admin"
  //       }).save(err => {
  //         if(err) {
  //           console.log("ERROR", err)
  //         }
  //         console.log("Added 'Admin'");
  //       })
  //     }
  //   })
  // }
  // initial();


  
// isAdmin = (req, res, next) => {
//   User.findById(req.userId).exec((err, user) => {
//     if (err) {
//       res.status(500).send({ message: err });
//       return;
//     }
//     Role.find(
//       {
//         _id: { $in: user.roles },
//       },
//       (err, roles) => {
//         if (err) {
//           res.status(500).send({ message: err });
//           return;
//         }
//         for (let i = 0; i < roles.length; i++) {
//           if (roles[i].name === "admin") {
//             next();
//             return;
//           }
//         }
//         res.status(403).send({ message: "Require Admin Role!" });
//         return;
//       }
//     );
//   });
// };


   // var authorities = [];
      // for (let i = 0; i < user.roles.length; i++) {
      //   authorities.push("ROLE_" + user.roles[i].name.toUpperCase());
      // }


      
  // app.get(
  //   "/admin",
  //   [authJwt.verifyToken, authJwt.isAdmin],
  //   controller.adminBoard
  // );


  

    // if (req.body.roles) {
    //   Role.find(
    //     {
    //       name: { $in: req.body.roles },
    //     },
    //     (err, roles) => {
    //       if (err) {
    //         res.status(500).send({ message: err });
    //         return;
    //       }
    //       user.roles = roles.map((role) => role._id);
          // user.save((err) => {
          //   if (err) {
          //     res.status(500).send({ message: err });
          //     return;
          //   }
          //   res.send({ message: "User was registered successfully!" });
          // });
      //   }
      // );
    // } else {
//       Role.findOne({ name: "user" }, (err, role) => {
//         if (err) {
//           res.status(500).send({ message: err });
//           return;
//         }
//         user.roles = [role._id];
//         user.save((err) => {
//           if (err) {
//             res.status(500).send({ message: err });
//             return;
//           }
//           res.send({ message: "User was registered successfully!" });
//         });
//       });
//     }
//   });
// };